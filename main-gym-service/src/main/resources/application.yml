server:
  port: 8091

spring:
  application:
    name: gym-service
  config:
    activate:
      on-profile: default
  datasource:
    url: jdbc:postgresql://localhost:5432/gym_bd
    username: postgres
    password: nikucha666
    driver-class-name: org.postgresql.Driver
  cloud:
    loadbalancer:
      ribbon:
        enabled: false

    openfeign:
      circuitbreaker:
        enabled: true
        alphanumeric-ids:
          enabled: true

resilience4j:
  circuitbreaker:
    instances:
      deleteTrainingCircuit:
        baseConfig: default
      saveTrainingCircuit:
        baseConfig: default
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 1
        minimumNumberOfCalls: 1
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 5000
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  timelimiter:
    instances:
      deleteTrainingCircuit:
        timeoutDuration: 20000
      saveTrainingCircuit:
        timeoutDuration: 20000
  jpa:
    show-sql: true
  sleuth:
    sampler:
      probability: 1.0

  zipkin:
    base-url: http://127.0.0.1:9411/

hibernate:
  dialect: org.hibernate.dialect.PostgreSQLDialect
  hbm2ddl.auto: update

logging:
  level:
    org.hibernate.SQL: DEBUG
    upskill.logger: DEBUG
    org.springframework.web: DEBUG
    org. resilience4j: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
    circuitbreakers:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    endpoint:
      metrics:
        enabled: true

secret: "SECRET"

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://127.0.0.1:8761/eureka}
  instance:
    hostname: 127.0.0.1
    preferIpAddress: false
